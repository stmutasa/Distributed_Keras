TensorFlow 2.0 Upgrade Script
-----------------------------
Converted 1 files
Detected 21 issues that require attention
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
File: SODNetwork.py
--------------------------------------------------------------------------------
SODNetwork.py:58:21: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
SODNetwork.py:68:23: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
SODNetwork.py:118:25: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
SODNetwork.py:121:25: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
SODNetwork.py:125:19: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
SODNetwork.py:178:21: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
SODNetwork.py:182:19: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
SODNetwork.py:230:21: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
SODNetwork.py:234:19: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
SODNetwork.py:297:21: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
SODNetwork.py:301:19: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
SODNetwork.py:951:22: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
SODNetwork.py:954:19: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
SODNetwork.py:1013:22: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
SODNetwork.py:1016:19: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
SODNetwork.py:1075:22: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
SODNetwork.py:1119:22: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
SODNetwork.py:1134:23: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
SODNetwork.py:1166:17: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
SODNetwork.py:1168:17: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
SODNetwork.py:1169:17: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
================================================================================
Detailed log follows:

================================================================================
--------------------------------------------------------------------------------
Processing file 'SODNetwork.py'
 outputting to 'SODNetwork.py'
--------------------------------------------------------------------------------

52:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
58:21: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
58:21: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
58:80: INFO: Changing tf.contrib.layers.variance_scaling_initializer to a tf.compat.v1.keras.initializers.VarianceScaling and converting arguments.

61:12: INFO: Renamed 'tf.add_to_collection' to 'tf.compat.v1.add_to_collection'
64:19: INFO: Added keywords to args of function 'tf.nn.conv2d'
64:19: INFO: Renamed keyword argument for tf.nn.conv2d from filter to filters
68:23: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
68:23: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
68:70: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
68:70: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
69:16: INFO: Renamed 'tf.add_to_collection' to 'tf.compat.v1.add_to_collection'
79:55: INFO: Changing keep_prob arg of tf.nn.dropout to rate, and recomputing value.

111:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
118:25: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
118:25: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
119:53: INFO: Changing tf.contrib.layers.variance_scaling_initializer to a tf.compat.v1.keras.initializers.VarianceScaling and converting arguments.

121:25: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
121:25: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
122:53: INFO: Changing tf.contrib.layers.variance_scaling_initializer to a tf.compat.v1.keras.initializers.VarianceScaling and converting arguments.

125:19: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
125:19: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
125:66: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
125:66: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
128:12: INFO: Renamed 'tf.add_to_collection' to 'tf.compat.v1.add_to_collection'
129:12: INFO: Renamed 'tf.add_to_collection' to 'tf.compat.v1.add_to_collection'
147:55: INFO: Changing keep_prob arg of tf.nn.dropout to rate, and recomputing value.

175:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
178:21: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
178:21: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
179:49: INFO: Changing tf.contrib.layers.variance_scaling_initializer to a tf.compat.v1.keras.initializers.VarianceScaling and converting arguments.

182:19: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
182:19: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
182:66: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
182:66: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
185:12: INFO: Renamed 'tf.add_to_collection' to 'tf.compat.v1.add_to_collection'
186:12: INFO: Renamed 'tf.add_to_collection' to 'tf.compat.v1.add_to_collection'
189:19: INFO: Added keywords to args of function 'tf.nn.depthwise_conv2d'
224:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
230:21: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
230:21: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
231:49: INFO: Changing tf.contrib.layers.variance_scaling_initializer to a tf.compat.v1.keras.initializers.VarianceScaling and converting arguments.

234:19: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
234:19: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
234:66: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
234:66: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
237:12: INFO: Renamed 'tf.add_to_collection' to 'tf.compat.v1.add_to_collection'
238:12: INFO: Renamed 'tf.add_to_collection' to 'tf.compat.v1.add_to_collection'
291:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
297:21: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
297:21: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
298:49: INFO: Changing tf.contrib.layers.variance_scaling_initializer to a tf.compat.v1.keras.initializers.VarianceScaling and converting arguments.

301:19: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
301:19: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
301:66: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
301:66: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
304:12: INFO: Renamed 'tf.add_to_collection' to 'tf.compat.v1.add_to_collection'
305:12: INFO: Renamed 'tf.add_to_collection' to 'tf.compat.v1.add_to_collection'
367:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
382:25: INFO: Added keywords to args of function 'tf.nn.max_pool'
382:25: INFO: Renamed keyword argument for tf.nn.max_pool from value to input
382:25: INFO: Renamed 'tf.nn.max_pool' to 'tf.nn.max_pool2d'
393:60: INFO: Changing keep_prob arg of tf.nn.dropout to rate, and recomputing value.

431:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
460:60: INFO: Changing keep_prob arg of tf.nn.dropout to rate, and recomputing value.

487:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
496:31: INFO: Changing keep_prob arg of tf.nn.dropout to rate, and recomputing value.

502:31: INFO: Changing keep_prob arg of tf.nn.dropout to rate, and recomputing value.

530:59: INFO: Changing keep_prob arg of tf.nn.dropout to rate, and recomputing value.

550:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
570:55: INFO: Changing keep_prob arg of tf.nn.dropout to rate, and recomputing value.

590:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
613:55: INFO: Changing keep_prob arg of tf.nn.dropout to rate, and recomputing value.

632:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
652:55: INFO: Changing keep_prob arg of tf.nn.dropout to rate, and recomputing value.

676:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
685:31: INFO: Changing keep_prob arg of tf.nn.dropout to rate, and recomputing value.

691:31: INFO: Changing keep_prob arg of tf.nn.dropout to rate, and recomputing value.

719:59: INFO: Changing keep_prob arg of tf.nn.dropout to rate, and recomputing value.

739:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
759:55: INFO: Changing keep_prob arg of tf.nn.dropout to rate, and recomputing value.

779:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
802:55: INFO: Changing keep_prob arg of tf.nn.dropout to rate, and recomputing value.

824:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
833:31: INFO: Changing keep_prob arg of tf.nn.dropout to rate, and recomputing value.

839:31: INFO: Changing keep_prob arg of tf.nn.dropout to rate, and recomputing value.

884:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
893:31: INFO: Changing keep_prob arg of tf.nn.dropout to rate, and recomputing value.

899:31: INFO: Changing keep_prob arg of tf.nn.dropout to rate, and recomputing value.

944:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
951:22: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
951:22: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
954:19: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
954:19: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
954:72: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
954:72: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
957:12: INFO: Renamed 'tf.add_to_collection' to 'tf.compat.v1.add_to_collection'
958:12: INFO: Renamed 'tf.add_to_collection' to 'tf.compat.v1.add_to_collection'
964:19: INFO: Renamed keyword argument for tf.nn.conv2d from filter to filters
976:57: INFO: Changing keep_prob arg of tf.nn.dropout to rate, and recomputing value.

981:23: INFO: Added keywords to args of function 'tf.nn.avg_pool'
981:23: INFO: Renamed keyword argument for tf.nn.avg_pool from value to input
981:23: INFO: Renamed 'tf.nn.avg_pool' to 'tf.nn.avg_pool2d'
1006:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
1013:22: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
1013:22: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
1016:19: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
1016:19: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
1016:72: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
1016:72: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
1019:12: INFO: Renamed 'tf.add_to_collection' to 'tf.compat.v1.add_to_collection'
1020:12: INFO: Renamed 'tf.add_to_collection' to 'tf.compat.v1.add_to_collection'
1026:19: INFO: Renamed keyword argument for tf.nn.conv3d from filter to filters
1038:57: INFO: Changing keep_prob arg of tf.nn.dropout to rate, and recomputing value.

1063:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
1075:22: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
1075:22: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
1076:50: INFO: Changing tf.contrib.layers.variance_scaling_initializer to a tf.compat.v1.keras.initializers.VarianceScaling and converting arguments.

1079:12: INFO: Renamed 'tf.add_to_collection' to 'tf.compat.v1.add_to_collection'
1090:56: INFO: Changing keep_prob arg of tf.nn.dropout to rate, and recomputing value.

1116:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
1119:22: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
1119:22: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
1120:50: INFO: Changing tf.contrib.layers.variance_scaling_initializer to a tf.compat.v1.keras.initializers.VarianceScaling and converting arguments.

1123:12: INFO: Renamed 'tf.add_to_collection' to 'tf.compat.v1.add_to_collection'
1134:23: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
1134:23: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
1134:76: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
1134:76: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
1137:16: INFO: Renamed 'tf.add_to_collection' to 'tf.compat.v1.add_to_collection'
1146:59: INFO: Changing keep_prob arg of tf.nn.dropout to rate, and recomputing value.

1164:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
1166:17: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
1166:17: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
1167:45: INFO: Changing tf.contrib.layers.variance_scaling_initializer to a tf.compat.v1.keras.initializers.VarianceScaling and converting arguments.

1168:17: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
1168:17: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
1168:66: INFO: Changing tf.contrib.layers.variance_scaling_initializer to a tf.compat.v1.keras.initializers.VarianceScaling and converting arguments.

1169:17: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
1169:17: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
1169:72: INFO: Changing tf.contrib.layers.variance_scaling_initializer to a tf.compat.v1.keras.initializers.VarianceScaling and converting arguments.

1172:12: INFO: Renamed 'tf.add_to_collection' to 'tf.compat.v1.add_to_collection'
1173:12: INFO: Renamed 'tf.add_to_collection' to 'tf.compat.v1.add_to_collection'
1205:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
1211:25: INFO: Added keywords to args of function 'tf.nn.avg_pool'
1211:25: INFO: Renamed keyword argument for tf.nn.avg_pool from value to input
1211:25: INFO: Renamed 'tf.nn.avg_pool' to 'tf.nn.avg_pool2d'
1215:25: INFO: Added keywords to args of function 'tf.nn.avg_pool'
1215:25: INFO: Renamed keyword argument for tf.nn.avg_pool from value to input
1215:25: INFO: Renamed 'tf.nn.avg_pool' to 'tf.nn.avg_pool2d'
1219:25: INFO: Added keywords to args of function 'tf.nn.avg_pool'
1219:25: INFO: Renamed keyword argument for tf.nn.avg_pool from value to input
1219:25: INFO: Renamed 'tf.nn.avg_pool' to 'tf.nn.avg_pool2d'
1237:14: INFO: Added keywords to args of function 'tf.nn.avg_pool'
1237:14: INFO: Renamed keyword argument for tf.nn.avg_pool from value to input
1237:14: INFO: Renamed 'tf.nn.avg_pool' to 'tf.nn.avg_pool2d'
1240:15: INFO: Added keywords to args of function 'tf.nn.max_pool'
1240:15: INFO: Renamed keyword argument for tf.nn.max_pool from value to input
1240:15: INFO: Renamed 'tf.nn.max_pool' to 'tf.nn.max_pool2d'
1289:15: INFO: Added keywords to args of function 'tf.nn.avg_pool'
1289:15: INFO: Renamed keyword argument for tf.nn.avg_pool from value to input
1289:15: INFO: Renamed 'tf.nn.avg_pool' to 'tf.nn.avg_pool2d'
1334:15: INFO: Changing labels arg of tf.nn.softmax_cross_entropy_with_logits to tf.stop_gradient(labels). Please check this transformation.

1343:15: INFO: Added keywords to args of function 'tf.reduce_mean'
1346:25: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
1346:25: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
1349:8: INFO: Renamed 'tf.add_to_collection' to 'tf.compat.v1.add_to_collection'
1383:23: INFO: Added keywords to args of function 'tf.reduce_mean'
1385:23: INFO: Added keywords to args of function 'tf.reduce_mean'
1389:12: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
1389:12: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
1390:12: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
1390:12: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
1390:48: INFO: Added keywords to args of function 'tf.reduce_mean'
1393:8: INFO: Renamed 'tf.add_to_collection' to 'tf.compat.v1.add_to_collection'
1410:15: INFO: Renamed 'tf.nn.softmax_cross_entropy_with_logits_v2' to 'tf.nn.softmax_cross_entropy_with_logits'
1413:15: INFO: Added keywords to args of function 'tf.reduce_mean'
1416:25: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
1416:25: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
1419:8: INFO: Renamed 'tf.add_to_collection' to 'tf.compat.v1.add_to_collection'
1443:15: INFO: Changing labels arg of tf.nn.softmax_cross_entropy_with_logits to tf.stop_gradient(labels). Please check this transformation.

1449:15: INFO: Added keywords to args of function 'tf.reduce_mean'
1452:8: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
1452:8: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
1455:8: INFO: Renamed 'tf.add_to_collection' to 'tf.compat.v1.add_to_collection'
1467:18: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
1473:8: INFO: Renamed 'tf.add_to_collection' to 'tf.compat.v1.add_to_collection'
1476:25: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
1476:25: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
1491:18: INFO: Added keywords to args of function 'tf.reduce_sum'
1491:18: INFO: Renamed keyword argument for tf.reduce_sum from keep_dims to keepdims
1492:61: INFO: Added keywords to args of function 'tf.shape'
1495:15: INFO: Renamed 'tf.div' to 'tf.compat.v1.div'
1517:12: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
1517:12: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
1518:12: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
1518:12: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
1540:27: INFO: Added keywords to args of function 'tf.reduce_sum'
1543:22: INFO: Added keywords to args of function 'tf.reduce_sum'
1543:46: INFO: Added keywords to args of function 'tf.reduce_sum'
1549:8: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
1549:8: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
1555:8: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
1555:8: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
1558:8: INFO: Renamed 'tf.add_to_collection' to 'tf.compat.v1.add_to_collection'
1574:15: INFO: Renamed 'tf.layers.batch_normalization' to 'tf.compat.v1.layers.batch_normalization'
1612:17: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
1613:22: INFO: Added keywords to args of function 'tf.transpose'
1620:17: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
1683:17: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
1690:32: INFO: Added keywords to args of function 'tf.transpose'
1702:17: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
1736:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
1756:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
1771:8: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
1771:8: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
1774:8: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
1774:8: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
1801:29: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
1804:22: INFO: Added keywords to args of function 'tf.shape'
1815:32: INFO: Added keywords to args of function 'tf.shape'
1818:23: INFO: Changed tf.to_int64 call to tf.cast(..., dtype=tf.int64).
1819:23: INFO: Changed tf.to_int64 call to tf.cast(..., dtype=tf.int64).
1824:24: INFO: Changed tf.to_int64 call to tf.cast(..., dtype=tf.int64).
1827:18: INFO: Renamed 'tf.sparse_reshape' to 'tf.sparse.reshape'
1847:55: INFO: Added keywords to args of function 'tf.shape'
1855:22: INFO: Renamed keyword argument for tf.sparse_reduce_sum from reduction_axes to axis
1855:22: INFO: Renamed 'tf.sparse_reduce_sum' to 'tf.sparse.reduce_sum'
1858:24: INFO: Renamed keyword argument for tf.sparse_reduce_sum from reduction_axes to axis
1858:24: INFO: Renamed 'tf.sparse_reduce_sum' to 'tf.sparse.reduce_sum'
1860:22: INFO: Added keywords to args of function 'tf.reduce_sum'
1863:22: INFO: Renamed keyword argument for tf.sparse_reduce_sum from reduction_axes to axis
1863:22: INFO: Renamed 'tf.sparse_reduce_sum' to 'tf.sparse.reduce_sum'
1864:24: INFO: Renamed keyword argument for tf.sparse_reduce_sum from reduction_axes to axis
1864:24: INFO: Renamed 'tf.sparse_reduce_sum' to 'tf.sparse.reduce_sum'
1866:22: INFO: Added keywords to args of function 'tf.reduce_sum'
1868:22: INFO: Renamed 'tf.reciprocal' to 'tf.math.reciprocal'
1870:22: INFO: Renamed 'tf.reciprocal' to 'tf.math.reciprocal'
1876:22: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
1876:31: INFO: Renamed 'tf.is_inf' to 'tf.math.is_inf'
1877:18: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
1877:27: INFO: Renamed 'tf.is_inf' to 'tf.math.is_inf'
1878:27: INFO: Added keywords to args of function 'tf.reduce_max'
1880:16: INFO: Added keywords to args of function 'tf.reduce_sum'
1883:39: INFO: Added keywords to args of function 'tf.reduce_sum'
1887:33: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
1887:42: INFO: Renamed 'tf.is_nan' to 'tf.math.is_nan'
1904:22: INFO: Added keywords to args of function 'tf.shape'
1916:35: INFO: Renamed keyword argument for tf.sparse_reduce_sum from reduction_axes to axis
1916:35: INFO: Renamed 'tf.sparse_reduce_sum' to 'tf.sparse.reduce_sum'
1920:16: INFO: Added keywords to args of function 'tf.reduce_sum'
1920:16: INFO: Renamed keyword argument for tf.reduce_sum from reduction_indices to axis
1922:16: INFO: Renamed keyword argument for tf.sparse_reduce_sum from reduction_axes to axis
1922:16: INFO: Renamed 'tf.sparse_reduce_sum' to 'tf.sparse.reduce_sum'
1925:35: INFO: Renamed keyword argument for tf.sparse_reduce_sum from reduction_axes to axis
1925:35: INFO: Renamed 'tf.sparse_reduce_sum' to 'tf.sparse.reduce_sum'
1927:16: INFO: Added keywords to args of function 'tf.reduce_sum'
1927:16: INFO: Renamed keyword argument for tf.reduce_sum from reduction_indices to axis
1928:16: INFO: Renamed keyword argument for tf.sparse_reduce_sum from reduction_axes to axis
1928:16: INFO: Renamed 'tf.sparse_reduce_sum' to 'tf.sparse.reduce_sum'
1932:25: INFO: Renamed 'tf.Print' to 'tf.compat.v1.Print'
1955:12: INFO: Renamed 'tf.logging.warning' to 'tf.compat.v1.logging.warning'
1958:55: INFO: Added keywords to args of function 'tf.shape'
1960:18: INFO: Renamed 'tf.sparse_tensor_to_dense' to 'tf.sparse.to_dense'
1968:27: INFO: Added keywords to args of function 'tf.reduce_sum'
1970:28: INFO: Added keywords to args of function 'tf.reduce_sum'
1972:13: INFO: Added keywords to args of function 'tf.reduce_sum'
1973:14: INFO: Added keywords to args of function 'tf.reduce_sum'
1975:15: INFO: Added keywords to args of function 'tf.reduce_sum'
1996:19: INFO: Added keywords to args of function 'tf.reduce_mean'
1998:32: INFO: Added keywords to args of function 'tf.reduce_sum'
1999:15: INFO: Added keywords to args of function 'tf.reduce_sum'
2005:18: INFO: Changing labels arg of tf.nn.softmax_cross_entropy_with_logits to tf.stop_gradient(labels). Please check this transformation.

2007:15: INFO: Added keywords to args of function 'tf.reduce_mean'
2022:12: INFO: Renamed 'tf.logging.warning' to 'tf.compat.v1.logging.warning'
2066:12: INFO: Renamed 'tf.logging.warning' to 'tf.compat.v1.logging.warning'
2070:55: INFO: Added keywords to args of function 'tf.shape'
2072:18: INFO: Renamed 'tf.sparse_tensor_to_dense' to 'tf.sparse.to_dense'
2078:20: INFO: Added keywords to args of function 'tf.reduce_sum'
2081:19: INFO: Added keywords to args of function 'tf.reduce_sum'
2084:19: INFO: Added keywords to args of function 'tf.reduce_sum'
2106:55: INFO: Added keywords to args of function 'tf.shape'
2112:35: INFO: Renamed keyword argument for tf.sparse_reduce_sum from reduction_axes to axis
2112:35: INFO: Renamed 'tf.sparse_reduce_sum' to 'tf.sparse.reduce_sum'
2115:16: INFO: Added keywords to args of function 'tf.reduce_sum'
2115:16: INFO: Renamed keyword argument for tf.reduce_sum from reduction_indices to axis
2117:16: INFO: Renamed keyword argument for tf.sparse_reduce_sum from reduction_axes to axis
2117:16: INFO: Renamed 'tf.sparse_reduce_sum' to 'tf.sparse.reduce_sum'
2120:35: INFO: Renamed keyword argument for tf.sparse_reduce_sum from reduction_axes to axis
2120:35: INFO: Renamed 'tf.sparse_reduce_sum' to 'tf.sparse.reduce_sum'
2123:16: INFO: Added keywords to args of function 'tf.reduce_sum'
2123:16: INFO: Renamed keyword argument for tf.reduce_sum from reduction_indices to axis
2124:16: INFO: Renamed keyword argument for tf.sparse_reduce_sum from reduction_axes to axis
2124:16: INFO: Renamed 'tf.sparse_reduce_sum' to 'tf.sparse.reduce_sum'
2130:21: INFO: Added keywords to args of function 'tf.reduce_mean'
2144:55: INFO: Added keywords to args of function 'tf.shape'
2151:35: INFO: Renamed keyword argument for tf.sparse_reduce_sum from reduction_axes to axis
2151:35: INFO: Renamed 'tf.sparse_reduce_sum' to 'tf.sparse.reduce_sum'
2154:16: INFO: Added keywords to args of function 'tf.reduce_sum'
2154:16: INFO: Renamed keyword argument for tf.reduce_sum from reduction_indices to axis
2156:16: INFO: Renamed keyword argument for tf.sparse_reduce_sum from reduction_axes to axis
2156:16: INFO: Renamed 'tf.sparse_reduce_sum' to 'tf.sparse.reduce_sum'
2159:35: INFO: Renamed keyword argument for tf.sparse_reduce_sum from reduction_axes to axis
2159:35: INFO: Renamed 'tf.sparse_reduce_sum' to 'tf.sparse.reduce_sum'
2161:31: INFO: Added keywords to args of function 'tf.reduce_sum'
2161:31: INFO: Renamed keyword argument for tf.reduce_sum from reduction_indices to axis
2162:31: INFO: Renamed keyword argument for tf.sparse_reduce_sum from reduction_axes to axis
2162:31: INFO: Renamed 'tf.sparse_reduce_sum' to 'tf.sparse.reduce_sum'
2168:21: INFO: Added keywords to args of function 'tf.reduce_mean'
2186:21: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
2189:55: INFO: Added keywords to args of function 'tf.shape'
2190:18: INFO: Renamed 'tf.sparse_tensor_to_dense' to 'tf.sparse.to_dense'
2205:13: INFO: Added keywords to args of function 'tf.reduce_sum'
2206:21: INFO: Added keywords to args of function 'tf.reduce_sum'
2207:20: INFO: Added keywords to args of function 'tf.reduce_sum'
2213:21: INFO: Added keywords to args of function 'tf.reduce_mean'
2233:31: INFO: Added keywords to args of function 'tf.reduce_sum'
2236:12: INFO: Added keywords to args of function 'tf.reduce_sum'
2237:12: INFO: Added keywords to args of function 'tf.reduce_sum'
2242:21: INFO: Added keywords to args of function 'tf.reduce_mean'
2262:31: INFO: Added keywords to args of function 'tf.reduce_sum'
2265:12: INFO: Added keywords to args of function 'tf.reduce_sum'
2266:12: INFO: Added keywords to args of function 'tf.reduce_sum'
2270:21: INFO: Added keywords to args of function 'tf.reduce_mean'
--------------------------------------------------------------------------------

